<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.halbae.mapper.UserMapper">

	<!-- 중복된 이메일 확인하기 -->
	<select id="checkUniqueId" parameterType="String" resultType="userDTO">
		SELECT *
		  FROM USER
		 WHERE USER_ID = #{userId} 
	</select>
	
	<!-- 전화번호 계정 갯수 확인하기 -->
	<select id="checkIdCountByTel" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM USER
		 WHERE USER_TEL = #{userTel} 
	</select>
	
	<!-- 회원가입 시키기 -->
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userNo" parameterType="userDTO">
		INSERT INTO USER (
			  USER_ID
			, USER_PW
			, USER_NAME
			, USER_TEL
			, USER_JOIN_DATE
			, USER_POINT
			, USER_IMG_PATH
			, USER_HAS_IMG
		) VALUES (
			  #{userId}
			, #{userPw}
			, #{userName}
			, #{userTel}
			, NOW()
			, 0
			, #{userImgPath}
			, 0
		)
	</insert>		
	
	<!-- 로그인 -->
	<select id="selectLoginInfo" parameterType="Map" resultType="UserDTO">
		SELECT *
		  FROM USER
		 WHERE USER_ID = #{userId} AND USER_PW = #{userPw} 
	</select>
	
	<!-- 자동 로그인 -->
	<update id="insertAutoLogin" parameterType="UserDTO">
		UPDATE USER
		   SET USER_AUTO_LOGIN_ID = #{userAutoLoginId}
		     , USER_AUTO_LOGIN_EXPIRED = #{userAutoLoginExpired}
		 WHERE USER_ID = #{userId}
	</update>
	<select id="selectUserDTOByAutoLoginId" parameterType="String">
		SELECT USER_NO, USER_ID, USER_NAME, USER_IMG_PATH 
		  FROM USER
		 WHERE USER_AUTO_LOGIN_ID = #{userAutoLoginId}
		   AND USER_AUTO_LOGIN_EXPIRED > NOW()
	</select>		
	
	<!-- 자동 로그인 지우기 -->
	<update id="deleteAutoLogin" parameterType="String">
		UPDATE USER
		   SET USER_AUTO_LOGIN_ID = NULL
		     , USER_AUTO_LOGIN_EXPIRED = NULL
		 WHERE USER_ID = #{userId}
	</update>		
    
  <!-- 전화번호로 가입된 아이디 조회 -->
  <select id="selectUserByTel" parameterType="String" resultType="UserDTO">
  	SELECT *
  	  FROM USER
  	 WHERE USER_TEL = #{userTel}  
  </select>
  
 	<!-- 임시 비밀번호로 변경하기 -->
 	<update id="updateTempPw" parameterType="UserDTO">
 		UPDATE USER
 		   SET USER_PW = #{userPw}
 		 WHERE USER_ID = #{userId}
 	</update> 
 	
 	<!-- 프로필 페이지로 유저 정보 전달 -->
 	<select id="selectUserProfile" parameterType="String" resultType="UserDTO">
 		SELECT USER_ID, USER_PW, USER_TEL, USER_NAME, USER_IMG_PATH
 		  FROM USER
 		 WHERE USER_ID = #{loginId} 
 	</select> 
  <!-- 아이디로 비번 가져오기 -->
  <select id="selectUserPwById" parameterType="String" resultType="String">
  	SELECT USER_PW
  	  FROM USER
  	 WHERE USER_ID = #{userId} 
  </select>
  <!-- 아이디로 비밀번호 변경하기 -->
  <update id="updateUserPwById" parameterType="UserDTO">
  	UPDATE USER
  	   SET USER_PW = #{userPw}
  	 WHERE USER_ID = #{userId}  
  </update>
  <!-- 회원탈퇴하기 -->
  <delete id="deleteUser" parameterType="String">
  	DELETE FROM USER
  	 WHERE USER_ID = #{userId}
  </delete>
  
  <!-- 프로필 업데이트 하기 --> 
  <update id="updateProfile" parameterType="UserDTO">
  	UPDATE USER
  	   SET USER_IMG_PATH = #{userImgPath},
  	   		 USER_NAME = #{userName}
  	 WHERE USER_ID = #{userId}
  </update>
  
  <select id="selectUsedProfile" resultType="String">
  	SELECT USER_IMG_PATH
  	  FROM USER
  </select>
    
  <!-- 수강 목록 가져오기 -->
  <select id="selectSchNoByUserNo" parameterType="int" resultType="int">
  	SELECT SCH_NO
  	  FROM ENROLL
  	 WHERE USER_NO = #{userNo} 
  </select>
  
  <select id="selectClassNoBySchNo" parameterType="int" resultType="int">
  	SELECT CLASS_NO
  	  FROM SCHEDULE
  	 WHERE SCH_NO = #{schNo}
  </select>
  
  <select id="selectClassByClassNo" parameterType="int" resultType="ClassListDTO">
  	SELECT *
  	  FROM CLASS_LIST
  	 WHERE CLASS_NO = #{classNo} 
  </select>
  
  <select id="selectSchBySchNo" parameterType="int" resultType="ScheduleDTO">
  	SELECT *
  	  FROM SCHEDULE
  	 WHERE SCH_NO = #{schNo} 
  </select>
  
    
</mapper>